rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
    // Default rule - require authentication
    match /{allPaths=**} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && (
        isAdmin() || isRegistrar() || isAcademicOfficer()
      );
    }
    
    // Student profile pictures and documents
    match /students/{studentId}/{allPaths=**} {
      // Allow students to read their own files
      allow read: if request.auth != null && (
        // Convert email format to student ID format for comparison
        request.auth.token.email.split('@')[0].replace('.', '/') == studentId ||
        isAdmin() || isRegistrar() || isAcademicOfficer()
      );
      
      // Allow students to upload their own files
      allow write: if request.auth != null && (
        request.auth.token.email.split('@')[0].replace('.', '/') == studentId ||
        isAdmin() || isRegistrar() || isAcademicOfficer()
      );
    }
    
    // Helper functions
    function isAdmin() {
      return request.auth != null && 
        firestore.get(/databases/(default)/documents/users/$(request.auth.uid)).data.role == "Super Admin";
    }
    
    function isRegistrar() {
      return request.auth != null && (
        firestore.get(/databases/(default)/documents/users/$(request.auth.uid)).data.role == "Registrar" ||
        firestore.get(/databases/(default)/documents/users/$(request.auth.uid)).data.role == "Super Admin"
      );
    }
    
    function isAcademicOfficer() {
      return request.auth != null && (
        firestore.get(/databases/(default)/documents/users/$(request.auth.uid)).data.role == "Academic Officer" ||
        firestore.get(/databases/(default)/documents/users/$(request.auth.uid)).data.role == "Super Admin"
      );
    }
  }
} 